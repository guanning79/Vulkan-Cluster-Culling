#version 450

layout (local_size_x = 64) in;

struct ClusterData {
    int vertex_offset;
    int triangle_offset;
    int vertex_count;
    int triangle_count;
};
layout(std430, set = 0, binding = 0) buffer  Clusters{
    ClusterData data[];
} clusters;

//layout(std430, set = 0, binding = 1) buffer  ClusterVertices{
//    int data[];
//} vertices;
//
//layout(std430, set = 0, binding = 2) buffer  ClusterTriangles{
//    int data[];
//} triangles;

struct OutData {
    uint vertex_offset;
    uint vertex_id;
};
layout(std430, set = 0, binding = 1) buffer  OutputBuffer{
    OutData data[];
} outTest;


void main()
{
    //grab global ID
	uint gID = gl_GlobalInvocationID.x;
    //make sure we don't access past the buffer size
    if(gID < clusters.data.length())
    {
        // do math
        outTest.data[gID].vertex_offset = clusters.data[gID].vertex_offset;
    }
    else
    {
        outTest.data[gID].vertex_offset = gl_WorkGroupID.x;
    }
}

